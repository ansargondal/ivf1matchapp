$(function () {


    //delete form submission logic
    $body.on('click', 'form #js-btn-delete', function (evt) {
        evt.preventDefault();

        //delete the row from database as well as from table
        destroy(table);
    });

    $('body').on('click', '.table .dropdown .dropdown-menu a', function () {

        var btn = $(this).closest('.dropdown').find('.btn');

        var status = $.trim($(this).text());


        btn.removeClass('dropdown-toggle').addClass('dropdown-loading');

        $.ajax({
            url: btn.data('url'),
            type: 'post',
            data: {status: status},
            dataType: "json",
            success: function (response) {

                if (!response.error) {

                    btn.removeClass('dropdown-loading').addClass('dropdown-toggle');
                    btn.text(status);

                    updateBtnStatus(btn, status);

                    if (btn.hasClass('cycle')) {
                        notify('Donor Cycle has been changed to ' + status + '!');
                    } else {
                        notify('Donor Status has been changed to ' + status + '!');
                    }
                }
            },
            error: function (response) {

            },
            complete: function () {
            }
        });
    });


    var table = $('#data-table').DataTable({

        buttons: ['copy', 'excel', 'pdf'],
        responsive: true,
        processing: true,
        serverSide: true,
        'ajax': "/admin/donorsAjax",
        'columns': [
            {'data': 'code', name: 'code'},
            {'data': 'name', name: 'name'},
            {'data': 'age', name: 'age'},
            {'data': 'weight', name: 'weight'},
            {'data': 'cycle', name: 'cycle'},
            {'data': 'status', name: 'status'},
            {'data': 'action', name: 'action'},
        ],
        "language": {
            processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only"></span>',
            paginate: {
                'previous': '<i class="fa fa-angle-double-left"></i>',
                'next': '<i class="fa fa-angle-double-right"></i>'
            }
        },
    });

});

function updateBtnStatus(btn, status) {

    btn.removeClass('btn-primary btn-success btn-info btn-warning btn-secondary btn-danger');

    switch (status.toLowerCase()) {
        case 'new':
            btn.addClass('btn-danger');
            break;
        case 'available':
        case 'active':
        case 'matched':
            btn.addClass('btn-success');
            break;
        case 'in cycle':
            btn.addClass('btn-info');
            break;
        case 'just completed cycle':
            btn.addClass('btn-secondary');
            break;
        case 'inactive':
            btn.addClass('btn-warning');
            break;
        default:
            break;
    }
}