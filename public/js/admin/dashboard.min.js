$(function () {
    //region Global Stuff
    var $taskEditModal = $('#note-edit-modal');
    var $taskModal = $('#new-note-modal');
    var $body = $('body');
    //endregion

    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });


    var table = $('#dt-tasks').DataTable({

        buttons: ['copy', 'excel', 'pdf'],
        responsive: true,
        processing: true,
        serverSide: true,
        'ajax': "/admin/tasksAjax",
        'columns': [
            {'data': 'body', name: 'body'},
            {'data': 'type', name: 'type'},
            {'data': 'created_at', name: 'created_at'},
            {'data': 'action', name: 'action'},
        ],
        "language": {
            processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only"></span>',
            paginate: {
                'previous': '<i class="fa fa-angle-double-left"></i>',
                'next': '<i class="fa fa-angle-double-right"></i>'
            }
        },
    });


    taskEditModal = $('#note-edit-modal');
    var updatePath = '';
    var row = '';

    $body.on('click', '.js-btn-edit', function (evt) {
        evt.preventDefault();

        updatePath = $(this).attr('href');   // route('tasks.update') path
        var editPath = updatePath + '/edit';           // faking  route('tasks.edit');

        row = $(this).parents('tr');

        $.ajax({
            url: editPath,
            type: 'get',
            dataType: 'json',
            success: function (response) {
                taskEditModal.modal('show');
                addFocusOnOpenModal($taskEditModal);
                taskEditModal.find('[name=type]').val(response.type);
                taskEditModal.find('[name=body]').val(response.body);
            },
            complete: function () {
            }
        });
    });

    var type, note;
    $('button#js-btn-update').click(function (evt) {
        evt.preventDefault();

        type = taskEditModal.find('[name="type"]').val();
        note = taskEditModal.find('[name="body"]').val();

        var form = $('#edit-note-form');
        var btn = $(this);

        var data = form.serializeArray();
        data.push({name: '_method', value: 'patch'}); //add patch

        showSpiner(btn);

        $.ajax({
            url: updatePath,
            type: 'post',
            data: data,
            dataType: 'json',
            success: function (response) {
                console.log(response);

                var temp = table.row(row).data();
                temp['type'] = type;
                temp['body'] = note;

                table.row(row).data(temp);

                // table.row.add({
                //     'first_name': fname,
                //     'last_name': lname,
                //     'email': email,
                //     'action': ''
                // }).draw(false);
            },
            complete: function () {
                hideSpinner(btn, 'SAVE');
                taskEditModal.modal('hide');
            }
        });
    });


    //new task open
    $('.js-btn-new-task').click(function (evt) {
        evt.preventDefault();

        $taskModal.modal('show');

        //add focus to non empty fields
        addFocusOnOpenModal($taskModal);
    });


    //new task form validation
    $('#new-note-form').validate({
        rules: {
            type: {
                required: true,
                minlength: 2,
                maxlength: 15,
            },
            note: {
                required: true,
                maxlength: 100
            }
        },
        messages: {
            type: {
                required: "Please enter a type",
            },
            note: {
                required: "Please enter the note",
            },
        },
    });


    $body.on('click', '#new-note-form .btn', function (evt) {
        evt.preventDefault();

        var form = $('#new-note-form');

        var isValid = form.valid();

        if (!isValid) {
            return 0;
        } else {
            form.submit();
        }
    });

//endregion

//region  (STEP 1) Donor Contact Information Saving using Ajax Logic
    $('#new-note-form').submit(function (evt) {
        evt.preventDefault();

        var form = $(this);
        var btn = $(this).find('.btn-submit');
        var dt = table;
        //if validation fails stop form submission
        var isValid = $(this).valid();
        if (!isValid) {
            return 0;
        }

        showSpiner(btn);

        $.ajax({
            url: form.attr('action'),
            type: form.attr('method'),
            data: form.serialize(),
            dataType: "json",
            success: function (response) {

                //reset form data
                form[0].reset();

                if (!response.error) {
                    notify(response.message, response.title);

                    table.row.add({
                        'id': 1,
                        'body': 'Some Random Note about type',
                        'type': 'Wordpress',
                        'created_at': 10,
                        'action': '<a href="#" >Edit</a>'
                    }).draw(false);

                    $('#new-note-modal').modal('hide');
                }
            },
            error: function (response) {

            },
            complete: function () {
                hideSpinner(btn, 'Save');
            }
        });
    });

    //delete form submission logic
    $body.on('click', 'form #js-btn-delete', function (evt) {
        evt.preventDefault();

        //delete the row from database as well as from table
        destroy(table);

    });

});

//endregion
